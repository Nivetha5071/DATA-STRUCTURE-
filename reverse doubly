class Node {
    int data;
    Node next, prev;

    Node(int data) {
        this.data = data;
        this.next = null;
        this.prev = null;
    }
}

class DoublyLinkedList {
    Node head, tail;

    public DoublyLinkedList() {
        head = null;
        tail = null;
    }
    public void insertAtBeginning(int data) {
        Node newNode = new Node(data);
        if (head == null) {  
            head = tail = newNode;
        } else {
            newNode.next = head;    
            head.prev = newNode;      
            head = newNode;          
        }
        System.out.println(data + " inserted at the beginning.");
    }
    public void insertAtEnd(int data) {
        Node newNode = new Node(data);
        if (tail == null) {  
            head = tail = newNode;
        } else {
            tail.next = newNode;   
            newNode.prev = tail;   
            tail = newNode;        
        }
        System.out.println(data + " inserted at the end.");
    }

  
    public void display() {
        Node temp = head;
        if (temp == null) {
            System.out.println("List is empty.");
            return;
        }
        System.out.print("Doubly Linked List: ");
        while (temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.next;
        }
        System.out.println();
    }
    public void displayReverse() {
        Node temp = tail;
        if (temp == null) {
            System.out.println("List is empty.");
            return;
        }
        System.out.print("Doubly Linked List in Reverse: ");
        while (temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.prev;
        }
        System.out.println();
    }
}

public class Main {
    public static void main(String[] args) {
        DoublyLinkedList list = new DoublyLinkedList();
        list.insertAtBeginning(10);
        list.insertAtBeginning(20);
        list.insertAtEnd(30);
        list.insertAtEnd(40);
        list.display();
        list.displayReverse();
    }
}
